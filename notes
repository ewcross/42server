steps:

		- get base image - debian:buster
		- install necessary packages (apt):
				- install nginx - done
				- copy new default file into filesystem -done
				- install mariadb - done
				- create db and set new user (script) (might need to do
				  "CREATE DATABASE wordpress DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;"
				  for wordpress to work proprerly) - done
				- php-fpm - done
				- phpmyadmin - done
				- configure phpmyadmin -done
				- configure nginx to serve phpmyadmin - done
				- create ssl certificate - done
				- configure nginx to work with ssl:
						- create snippet with certificate and key locations - done
						- add 443 listening to 'localhost' in sites-available - done
						- add ssl-params.config snippet (i think only needed for increased security and
						  haven't done yet)
						- check if wordpress specific #try_files is needed (haven't done yet)
				- install additional php extensions for wordpress (seems to work without but might
				  want to add for more functionality, also not sure how to access database through wordpress)
				- install wordpress - done
				- configure wordpress (might need to add to script to generate secret keys each time and
				  have them inserted into the wp-config.pjp file) - done
				- configure nginx to serve wordpress (might need none of the changes added to config file) - done
				- check how to remove verbosity for all downloads
				- could also make a db user config file in srcs with name, user and password, and have this insert
				  these details into the right config files, but this is a lot of effort

nginx config:

		- import default file into etc/nginx/sites-available with SSL enabled
		  and other config
		- to add domain to server
				- add new config file called 'domain_name' to sites-available (etc/nginx/sites-available) - it
				  will only respond to requests to the host or IP address provided after 'server_name', and any
				  files ending in .php will be processed by php-fpm before Nginx sends the
				  results to the user (need to activate php-fpm for this to work - run
				  command 'etc/init.d/php7.3-fpm start')
				- create sym link to this file from sites-enabled (or just copy file into
				  it) - 'ln -s /etc/nginx/sites-available/domain_name /etc/nginx/sites-enabled/'
				- add domain web dir to root dir - mkdir var/www/domain_name
				- add any files you want to serve at this domain_name to the var/www/domain_name dir
				- can sub 'localhost' for domain name to test
server {
	listen 80;
	listen 443 ssl;
	listen [::]:80;
	listen [::]:443 ssl;
	include snippets/self-signed.conf;

	root /var/www/localhost;
	index index.php index.html index.htm;
	# to give 404 error instead of 403 when index disabled
	error_page 403 =404;

	server_name localhost;

	location / {
		try_files $uri $uri/ =404;
	}

	# some settings for wordpress
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
	location = /robots.txt {
		log_not_found off;
		access_log off;
		allow all;
	}
	location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
		expires max;
		log_not_found off;
	}

	# any .php files will be processed by php before being served
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
	}
}
